@import "media-queries";

// Label mixins

@mixin float-label-container {
	display: block;
	position: relative;
}

@mixin float-label {
  label,
  > .fl-label,
  .ng-select-container .ng-placeholder {
    position: absolute;
    left: 12px;
    top: -10px;
    cursor: text;
    color: $app-placeholder-color;
    font-weight: normal;
    font-size: 10px;
    transition: all 0.2s;
    z-index: 100;
    padding: 0 4px;
    line-height: 20px;
    background-color: white;
    border-radius: $app-input-radius;

    img {
      // height: 11px;
      // width: auto;
      // vertical-align: middle;
      display: none;
    }

    & ~ .description-feedback {
      font-size: 12px;
      font-style: italic;
    }

    @content;
  }
}

@mixin float-label-input {
	&::placeholder {
		opacity: 0; // Value before 1
		transition: all 0.2s;
	}

	&:placeholder-shown:not(:focus)::placeholder {
		opacity: 0;
	}
}

@mixin float-label-scaled {
	&:placeholder-shown:not(:focus) + * {
		// &:not(:-webkit-autofill + *) {
		font-size: $app-input-font-size;
		@content;

		img {
			height: auto;
			width: auto;
			max-height: 20px;
			display: initial;
			vertical-align: top;
		}
	}
}

@mixin error-icon($icon) {
	padding-right: 16px;
	background-image: url($icon);
	background-repeat: no-repeat;
	background-position: top 10px right;
	background-size: 16px 16px;
	//line-height: 16px;
}

@mixin text-color($color) {
	line-height: normal;
	color: $color;
}

@mixin password-symbol {
	font-family: Verdana;
	letter-spacing: 0.125em;
}

@mixin cross($size: 20px, $color: currentColor, $thickness) {
	margin: 0;
	padding: 0;
	border: 0;
	background: none;
	position: relative;
	width: 20px;
	height: 20px;
	cursor: pointer;

	&:before,
	&:after {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		height: $thickness;
		background: $color;
		border-radius: 50%;
		width: $size;
	}

	&:before {
		// transform: translateX(-100%) translateY(calc(-#{$size} / 2 + #{$thickness})) rotate(45deg);
		transform: translateX(0) translateY(calc(#{$size} / 2)) rotate(45deg);
	}

	&:after {
		// transform: translateX(-100%) translateY(calc(-#{$size} / 2 + #{$thickness})) rotate(-45deg);
		transform: translateX(0) translateY(calc(#{$size} / 2)) rotate(-45deg);
	}

	span {
		display: block;
	}
}
